{"version":3,"sources":["Redux/Actions/site-settings-actions.ts","Redux/Actions/demo-counter-actions.ts","Redux/Reducers/site-settings-reducer.ts","Redux/Reducers/demo-counter-reducer.ts","Redux/Actions/search-results-actions.ts","Utils/uniqueArrayBy.ts","Redux/Reducers/search-results-reducer.ts","Redux/index.ts","serviceWorker.ts","MaterialUI/index.ts","AppEntry/styles.ts","Components/PageHome/styles.ts","Components/Search/styles.ts","Redux/Selectors/search-results-selectors.ts","Components/Search/index.tsx","Redux/Thunks/fetchNameMatches.ts","Components/ResultsForRegistry/styles.ts","Components/ResultsForRegistry/RegistryComet/styles.ts","Components/ResultsForRegistry/RegistryComet/index.tsx","Components/ResultsForRegistry/index.tsx","Redux/Thunks/fetchRegistryResults.ts","Components/ResultsForCatch/styles.ts","Components/ResultsForCatch/index.tsx","Components/ResultsForFerret/styles.ts","Components/ResultsForFerret/index.tsx","Components/PageHome/index.tsx","Components/PageAbout/index.tsx","Components/PageContact/index.tsx","Components/PageReduxDemo/styles.ts","Redux/Selectors/site-settings-selectors.ts","Redux/Selectors/demo-counter-selectors.ts","Components/PageReduxDemo/index.tsx","Redux/Thunks/fetchRandomTrumpQuote.ts","Components/Footer/styles.ts","Utils/constants.ts","Components/Footer/index.tsx","Components/Navigation/MenuBar/styles.ts","Components/Navigation/menu-items.ts","Components/Navigation/MenuBar/index.tsx","Components/Navigation/MenuColumn/styles.ts","Components/Navigation/MenuColumn/index.tsx","Components/Navigation/styles.ts","Components/Navigation/index.tsx","Components/Layout/styles.ts","Components/Layout/index.tsx","index.tsx","AppEntry/index.tsx"],"names":["ESiteSettingsActionTypes","EDemoCounterActionTypes","SiteSettingsSetTheme","payload","type","SET_THEME","this","SiteSettingsToggleIsHappyWithCookies","TOGGLE_IS_HAPPY_WITH_COOKIES","initialState","theme","isHappyWithCookies","DemoCounterIncrement","INCREMENT","DemoCounterReset","RESET","DemoCounterSetQuote","SET_QUOTE","count","quote","author","ESearchResultsActionTypes","SearchResultsSetNameMatches","SET_NAME_MATCHES","SearchResultsSelectObject","SELECT_OBJECT","SearchResultsSetRegistryResults","SET_REGISTRY_RESULTS","uniqueArrayBy","arr","prop","reduce","acc","el","every","el2","push","nameMatches","selectedObject","undefined","registryResults","rootReducer","combineReducers","siteSettingsSubstate","state","action","SET_IS_HAPPY_WITH_COOKIES","demoCounterSubstate","incValue","searchResultsSubstate","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","defaultLight","createMuiTheme","palette","background","default","primary","main","secondary","error","useStyles","makeStyles","container","height","width","name","searchWrapper","marginBottom","padding","paddingLeft","resultsWrapper","marginTop","form","border","maxWidth","textFieldWrapper","boxSizing","highlightedTextFieldWrapper","color","option","fontFamily","fontWeight","whiteSpace","selectSearchResultsNameMatches","selectSearchResultsSelectedObject","Search","dispatch","useDispatch","classes","useSelector","useState","typedText","setTypedText","isNameMatched","setIsNameMatched","helperText","length","lengthOfLongestName","map","Math","max","useEffect","inputText","console","log","fetch","then","res","json","data","matches","catch","err","nameMatch","forEach","includes","handleTextChange","event","target","value","className","noValidate","autoComplete","Autocomplete","id","onSelect","freeSolo","options","getOptionLabel","renderOption","namePart","input","totalLength","wSpaces","repeat","whiteSpaceBuffer","typePart","toUpperCase","substring","formatNameMatchOption","style","margin","renderInput","params","TextField","onChange","variant","placeholder","label","fullWidth","InputLabelProps","shrink","overflow","title","item","fontSize","itemLabel","itemEntry","marginRight","expanderHeading","typography","fontWeightBold","textTransform","RegistryComet","registryResult","useTheme","missions","mission_datasets","mission","filter","ind","indexOf","missionCounts","rosesProposals","roses_proposal_datasets","proposal","rosesProposalCounts","cross_ids","key","alternate_types","href","ExpansionPanel","elevation","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","ind2","link_to_file_server","lid","date","data_type","thumbnail_collections","coll","ind3","ResultsForRegistry","selectedObjectName","find","ResultsForCatch","ResultsForFerret","PageHome","Paper","PageAbout","PageContact","selectSiteSettingsTheme","selectSiteSettingsIsHappyWithCookies","selectDemoCounterCount","createSelector","selectDemoCounterQuote","PageReduxDemo","demoCounterCount","onClick","message","backgroundColor","dark","contrastText","Footer","React","memo","flexGrow","textDecoration","menuButton","display","justifyContent","alignItems","links","marginLeft","listItem","settingsButton","menuItems","route","icon","Home","Info","Mail","MenuBar","props","AppBar","position","Toolbar","IconButton","edge","aria-label","openDrawer","to","MenuColumn","List","ListItem","button","component","Link","onItemClick","ListItemIcon","ListItemText","Divider","top","left","right","Navigation","isDrawerOpen","setIsDrawerOpen","closeDrawer","useCallback","setTimeout","role","SwipeableDrawer","anchor","open","onClose","onOpen","flexDirection","minHeight","navWrapper","pageWrapper","paddingTop","flex","footerWrapper","Layout","children","ReactDOM","render","ThemeProvider","CssBaseline","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c09c1c20.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport { TPermittedTheme } from '../../Models/themes';\n\n/**\n * Define all possible 'types' of redux action associated with site settings\n */\nexport enum ESiteSettingsActionTypes {\n  SET_THEME = '[SiteSettings] Set Theme',\n  SET_IS_HAPPY_WITH_COOKIES = '[SiteSettings] Set IsHappyWithCookies',\n  TOGGLE_IS_HAPPY_WITH_COOKIES = '[SiteSettings] Toggle IsHappyWithCookies'\n}\n\n/**\n * Define an 'action creator' for each type of action\n * Here we take the class-based approach to action creators\n */\nexport class SiteSettingsSetTheme implements Action {\n  readonly type = ESiteSettingsActionTypes.SET_THEME;\n  constructor(public payload: TPermittedTheme) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SiteSettingsSetIsHappyWithCookies implements Action {\n  readonly type = ESiteSettingsActionTypes.SET_IS_HAPPY_WITH_COOKIES;\n  constructor(public payload: boolean) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SiteSettingsToggleIsHappyWithCookies implements Action {\n  readonly type = ESiteSettingsActionTypes.TOGGLE_IS_HAPPY_WITH_COOKIES;\n  constructor() {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\n/**\n * Combine and export all action-creator class names into a single type\n */\nexport type SiteSettingsActions =\n  | SiteSettingsSetTheme\n  | SiteSettingsSetIsHappyWithCookies\n  | SiteSettingsToggleIsHappyWithCookies;\n","import { Action } from 'redux';\n\n/**\n * Define all possible 'type' properties of redux actions associated with site settings\n */\nexport enum EDemoCounterActionTypes {\n  SET_QUOTE = '[DemoCounter] Set Quote',\n  INCREMENT = '[DemoCounter] Increment',\n  RESET = '[DemoCounter] Reset'\n}\n\n/**\n * Define an 'action creator' for each type of action\n * Here we take the class-based approach to action creators\n */\nexport class DemoCounterIncrement implements Action {\n  readonly type = EDemoCounterActionTypes.INCREMENT;\n  constructor(public payload?: number) {\n    return { ...this };\n  }\n}\n\nexport class DemoCounterReset implements Action {\n  readonly type = EDemoCounterActionTypes.RESET;\n  constructor() {\n    return { ...this };\n  }\n}\n\nexport class DemoCounterSetQuote implements Action {\n  readonly type = EDemoCounterActionTypes.SET_QUOTE;\n  constructor(public payload: { author: string; quote: string }) {\n    return { ...this };\n  }\n}\n\n/**\n * Combine and export all action-creator class names into a single type\n */\nexport type DemoCounterActions = DemoCounterIncrement | DemoCounterReset | DemoCounterSetQuote;\n","import { TPermittedTheme } from '../../Models/themes';\nimport { ESiteSettingsActionTypes, SiteSettingsActions } from '../Actions/site-settings-actions';\n\nexport interface ISiteSettingsSubstate {\n  theme: TPermittedTheme;\n  isHappyWithCookies: boolean;\n}\n\nconst initialState: ISiteSettingsSubstate = {\n  theme: 'dark',\n  isHappyWithCookies: false\n};\n\nexport function siteSettingsReducer(\n  state: Readonly<ISiteSettingsSubstate> = initialState,\n  action: SiteSettingsActions\n): ISiteSettingsSubstate {\n  switch (action.type) {\n    case ESiteSettingsActionTypes.SET_THEME: {\n      return {\n        ...state,\n        theme: action.payload\n      };\n    }\n    case ESiteSettingsActionTypes.SET_IS_HAPPY_WITH_COOKIES: {\n      return {\n        ...state,\n        isHappyWithCookies: action.payload\n      };\n    }\n    case ESiteSettingsActionTypes.TOGGLE_IS_HAPPY_WITH_COOKIES: {\n      return {\n        ...state,\n        isHappyWithCookies: !state.isHappyWithCookies\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { DemoCounterActions, EDemoCounterActionTypes } from '../Actions/demo-counter-actions';\n\nexport interface IDemoCounterSubstate {\n  count: number;\n  quote: string;\n  author: string;\n}\n\nconst initialState: IDemoCounterSubstate = {\n  count: 0,\n  quote: '',\n  author: ''\n};\n\nexport function demoCounterReducer(\n  state: Readonly<IDemoCounterSubstate> = initialState,\n  action: DemoCounterActions\n): IDemoCounterSubstate {\n  switch (action.type) {\n    case EDemoCounterActionTypes.INCREMENT: {\n      const incValue = action.payload || 1;\n      return {\n        ...state,\n        count: state.count + incValue\n      };\n    }\n    case EDemoCounterActionTypes.RESET: {\n      return {\n        ...state,\n        count: 0\n      };\n    }\n    case EDemoCounterActionTypes.SET_QUOTE: {\n      return {\n        ...state,\n        author: action.payload.author,\n        quote: action.payload.quote\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { Action } from 'redux';\n\nexport type TObjectTypes = 'comet' | 'asteroid' | 'dust' | 'meteor';\n\nexport interface INameMatch {\n  type: TObjectTypes;\n  name: string;\n}\n\ninterface IDataset {\n  link_to_file_server: string;\n  lid: number;\n  date: Date;\n  data_type: 'photometry' | 'spectroscopy' | 'imaging';\n  thumbnail_collections: {\n    name: string;\n    image_links: string[];\n  }[];\n}\nexport interface IMissionDataset extends IDataset {\n  mission: 'neowise' | 'castalia';\n}\n\nexport interface IRosesProposalDataset extends IDataset {\n  proposal: string;\n}\n\nexport interface IRegistryResult {\n  name: string;\n  type: TObjectTypes;\n  alternate_types: string[];\n  cross_ids: string[];\n  mission_datasets: IMissionDataset[];\n  roses_proposal_datasets: IRosesProposalDataset[];\n}\n\n/**\n * Define all possible 'types' of redux action associated with site settings\n */\nexport enum ESearchResultsActionTypes {\n  SET_NAME_MATCHES = '[SearchResults] Set Name Matches',\n  SELECT_OBJECT = '[SearchResults] Select Object',\n  SET_REGISTRY_RESULTS = '[SearchResults] Set Registry Results'\n}\n\n/**\n * Define an 'action creator' for each type of action\n * Here we take the class-based approach to action creators\n */\nexport class SearchResultsSetNameMatches implements Action {\n  readonly type = ESearchResultsActionTypes.SET_NAME_MATCHES;\n  constructor(public payload: INameMatch[]) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SearchResultsSelectObject implements Action {\n  readonly type = ESearchResultsActionTypes.SELECT_OBJECT;\n  constructor(public payload: INameMatch | undefined) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SearchResultsSetRegistryResults implements Action {\n  readonly type = ESearchResultsActionTypes.SET_REGISTRY_RESULTS;\n  constructor(public payload: IRegistryResult) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\n/**\n * Combine and export all action-creator class names into a single type\n */\nexport type SearchResultsActions =\n  | SearchResultsSetNameMatches\n  | SearchResultsSelectObject\n  | SearchResultsSetRegistryResults;\n","/**\n * Function to find all unique objects in an array based on a specified property\n * Adapted from: https://stackoverflow.com/a/51655152/8620332\n */\nexport function uniqueArrayBy<T>(arr: T[], prop: keyof T): T[] {\n  return arr.reduce((acc: T[], el) => {\n    if (acc.every((el2) => el2[prop] !== el[prop])) {\n      acc.push(el);\n    }\n    return acc;\n  }, []);\n}\n","import { INameMatch } from '../Actions/search-results-actions';\nimport { ESearchResultsActionTypes, SearchResultsActions } from '../Actions/search-results-actions';\nimport { IRegistryResult } from '../Actions/search-results-actions';\nimport { uniqueArrayBy } from '../../Utils/uniqueArrayBy';\n\nexport interface ISearchResultsSubstate {\n  nameMatches: INameMatch[];\n  selectedObject?: INameMatch;\n  registryResults: IRegistryResult[];\n}\n\nconst initialState: ISearchResultsSubstate = {\n  nameMatches: [],\n  selectedObject: undefined,\n  registryResults: []\n};\n\nexport function searchResultsReducer(\n  state: Readonly<ISearchResultsSubstate> = initialState,\n  action: SearchResultsActions\n): ISearchResultsSubstate {\n  switch (action.type) {\n    case ESearchResultsActionTypes.SET_NAME_MATCHES: {\n      return {\n        ...state,\n        nameMatches: [...action.payload]\n      };\n    }\n    case ESearchResultsActionTypes.SELECT_OBJECT: {\n      return {\n        ...state,\n        selectedObject: action.payload\n      };\n    }\n    case ESearchResultsActionTypes.SET_REGISTRY_RESULTS: {\n      return {\n        ...state,\n        // Just add to registryResults then ensure array has objects unique by 'name' property\n        registryResults: uniqueArrayBy([...state.registryResults, action.payload], 'name')\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { siteSettingsReducer, ISiteSettingsSubstate } from './Reducers/site-settings-reducer';\nimport { demoCounterReducer, IDemoCounterSubstate } from './Reducers/demo-counter-reducer';\nimport { searchResultsReducer, ISearchResultsSubstate } from './Reducers/search-results-reducer';\n\nexport interface IState {\n  siteSettingsSubstate: ISiteSettingsSubstate;\n  demoCounterSubstate: IDemoCounterSubstate;\n  searchResultsSubstate: ISearchResultsSubstate;\n}\n\nexport const rootReducer = combineReducers<IState>({\n  siteSettingsSubstate: siteSettingsReducer,\n  demoCounterSubstate: demoCounterReducer,\n  searchResultsSubstate: searchResultsReducer\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const defaultDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: { default: 'black' }\n  }\n});\n\nexport const defaultLight = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n});\n\n// Themes derived from https://bootswatch.com/\nexport const darklyTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#375a7f' },\n    secondary: { main: '#444' },\n    error: { main: '#E74C3C' },\n    background: { default: 'black' }\n  }\n});\n\nexport const superheroTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#DF691A' },\n    secondary: { main: '#4E5D6C' },\n    error: { main: '#d9534f' },\n    background: { default: '#2B3E50' }\n  }\n});\n\n// export const theme = darklyTheme;\nexport const theme = defaultLight;\n\nexport default theme;\n\n//\n// Palette Type:\n//\n// primary?: PaletteColorOptions;\n// secondary?: PaletteColorOptions;\n// error?: PaletteColorOptions;\n// type?: PaletteType;\n// tonalOffset?: number;\n// contrastThreshold?: number;\n// common?: Partial<CommonColors>;\n// grey?: ColorPartial;\n// text?: Partial<TypeText>;\n// divider?: string;\n// action?: Partial<TypeAction>;\n// background?: Partial<TypeBackground>;\n// getContrastText?: (background: string) => string;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      height: '100%',\n      width: '100%'\n    }\n  }),\n  { name: 'app-entry' }\n);\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    searchWrapper: {\n      marginBottom: 10,\n      padding: 20,\n      paddingLeft: 0\n    },\n    resultsWrapper: {\n      '& h1, h2, h3, h4, h5, h6': {\n        marginTop: 5,\n        marginBottom: 5\n      },\n      '& > .MuiPaper-root': {\n        marginBottom: 10,\n        padding: 20\n      }\n    }\n  }),\n  { name: 'page-home' }\n);\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst borderWidth = 0;\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    form: {\n      border: `${borderWidth}px red solid`,\n      width: '100%',\n      maxWidth: 500\n      // height: 100\n    },\n    textFieldWrapper: {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      border: `${borderWidth}px green solid`,\n      boxSizing: 'border-box'\n    },\n    highlightedTextFieldWrapper: {\n      '& .MuiFormHelperText-root': {\n        color: 'green'\n      }\n    },\n    option: {\n      fontFamily: 'monospace',\n      fontWeight: 'bold',\n      whiteSpace: 'pre-wrap'\n    }\n  }),\n  { name: 'search' }\n);\n","import { createSelector } from 'reselect';\n\nimport { IState } from '..';\nimport { IRegistryResult } from '../Actions/search-results-actions';\n\n/**\n * Elemental Selectors\n */\n\nexport const selectSearchResultsNameMatches = (state: IState) =>\n  state.searchResultsSubstate.nameMatches;\n\nexport const selectSearchResultsSelectedObject = (state: IState) =>\n  state.searchResultsSubstate.selectedObject;\n\nexport const selectSearchResultsRegistryResults = (name: string | undefined) => (state: IState) =>\n  state.searchResultsSubstate.registryResults.find((el) => el.name === name);\n\n/**\n * Compound Selectors\n */\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nimport { useStyles } from './styles';\nimport { fetchNameMatches } from '../../Redux/Thunks/fetchNameMatches';\nimport { selectSearchResultsNameMatches } from '../../Redux/Selectors/search-results-selectors';\nimport { INameMatch, SearchResultsSelectObject } from '../../Redux/Actions/search-results-actions';\n\n// Development switch to auto-load search results\nconst initTypedText = !true ? '133P/Elst-Pizzaro' : '';\n\nexport const Search = () => {\n  // State-ful params\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const nameMatches = useSelector(selectSearchResultsNameMatches);\n  const [typedText, setTypedText] = useState(initTypedText);\n  const [isNameMatched, setIsNameMatched] = useState(false);\n  const helperText = isNameMatched ? '✓ Name Matched' : !!typedText.length ? 'No Match' : '';\n  const lengthOfLongestName = lengthOfLongestNameMatch(nameMatches);\n\n  // Effects\n  useEffect(() => {\n    dispatch(fetchNameMatches(typedText));\n  }, [typedText, dispatch]);\n\n  useEffect(() => {\n    let nameMatch: INameMatch | undefined;\n    if (!!typedText) {\n      nameMatches.forEach((el) => {\n        if (typedText.includes(el.name)) nameMatch = el;\n      });\n    }\n    setIsNameMatched(!!nameMatch);\n    dispatch(new SearchResultsSelectObject(nameMatch));\n  }, [nameMatches, typedText, dispatch]);\n\n  // Callbacks\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTypedText(event.target.value);\n  };\n\n  return (\n    <div className={classes.container}>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div\n          className={\n            classes.textFieldWrapper +\n            ' ' +\n            (isNameMatched ? classes.highlightedTextFieldWrapper : '')\n          }\n        >\n          <Autocomplete\n            id=\"combo-box-demo\"\n            onSelect={handleTextChange}\n            freeSolo\n            options={nameMatches}\n            getOptionLabel={(nameMatch) => {\n              return nameMatch.name;\n            }}\n            renderOption={(nameMatch) => (\n              <span className={classes.option}>\n                {formatNameMatchOption(nameMatch, lengthOfLongestName)}\n              </span>\n            )}\n            style={{ width: 300, margin: 0 }}\n            renderInput={(params: any) => {\n              // console.log('params', params);\n              // params.inputProps.value = initTypedText;\n              return (\n                <TextField //\n                  onChange={handleTextChange}\n                  {...params}\n                  id=\"search-field\"\n                  variant=\"outlined\"\n                  helperText={helperText}\n                  placeholder=\"E.g. Elst-Pizarro\"\n                  label=\"SBN Search\"\n                  fullWidth\n                  InputLabelProps={{ shrink: true }} // Forces label to be already shifted upwards\n                />\n              );\n            }}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\n/**\n * Find length of longest string in array of strings\n */\nfunction lengthOfLongestNameMatch(input: INameMatch[]) {\n  return input\n    .map((el) => el.name.length)\n    .reduce((acc, el) => {\n      return Math.max(acc, el);\n    }, 0);\n}\n\n/**\n * Returns string of white spaces to add to input text to make total length equal the totalLength argument\n */\nfunction whiteSpaceBuffer(input: string, totalLength: number) {\n  const wSpaces = totalLength - input.length;\n  const result = ' '.repeat(wSpaces > 0 ? wSpaces : 0);\n  return result;\n}\n\n/**\n * Maps INameMatch item to form: \"Name    | Type\"\n */\nfunction formatNameMatchOption(nameMatch: INameMatch, lengthOfLongestName: number) {\n  const namePart = nameMatch.name + whiteSpaceBuffer(nameMatch.name, lengthOfLongestName);\n  const typePart = nameMatch.type[0].toUpperCase() + nameMatch.type.substring(1);\n  return `${namePart} | ${typePart}`;\n}\n","import { SearchResultsSetNameMatches } from '../Actions/search-results-actions';\n\nconst superSimpleJsonApiUrl =\n  'https://raw.githubusercontent.com/Small-Bodies-Node/sbn-portal-site/simple-headless-cms/headless-cms/demo-name-matches.json';\n\nexport function fetchNameMatches(inputText: string) {\n  console.log('inputText', inputText);\n  if (!inputText) return (dispatch: any) => dispatch(new SearchResultsSetNameMatches([]));\n  return function (dispatch: any) {\n    return fetch(superSimpleJsonApiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log('data', data.matches);\n        dispatch(new SearchResultsSetNameMatches(data.matches));\n      })\n      .catch((err) => {\n        // Handle errors\n      });\n  };\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    },\n    title: {\n      // marginTop: 0\n    }\n  }),\n  { name: 'results-for-registry' }\n);\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    item: {\n      fontSize: 16,\n      margin: 15\n    },\n    itemLabel: {\n      fontWeight: 'bold'\n    },\n    itemEntry: {\n      marginRight: 0\n    },\n    expanderHeading: {\n      fontSize: 18,\n      fontWeight: theme.typography.fontWeightBold,\n      textTransform: 'capitalize'\n    }\n  }),\n  { name: 'registry-comet' }\n);\n","import React from 'react';\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails,\n  useTheme\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { useStyles } from './styles';\nimport { IRegistryResult } from '../../../Redux/Actions/search-results-actions';\n\nexport const RegistryComet = ({ registryResult }: { registryResult: IRegistryResult }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // This component is specific to comet results\n  if (registryResult.type !== 'comet') return <span className=\"error-has-occured\"></span>;\n\n  const missions = registryResult.mission_datasets\n    .map((el) => el.mission)\n    .filter((el, ind, arr) => arr.indexOf(el) === ind);\n\n  const missionCounts = missions.reduce((acc: any, mission, ind, arr) => {\n    acc[mission] = registryResult.mission_datasets.filter((el) => el.mission === mission).length;\n    return acc;\n  }, {});\n\n  const rosesProposals = registryResult.roses_proposal_datasets\n    .map((el) => el.proposal)\n    .filter((el, ind, arr) => arr.indexOf(el) === ind);\n\n  const rosesProposalCounts = rosesProposals.reduce((acc: any, proposal, ind, arr) => {\n    acc[proposal] = registryResult.roses_proposal_datasets.filter(\n      (el) => el.proposal === proposal\n    ).length;\n    return acc;\n  }, {});\n\n  return (\n    <div className={classes.container}>\n      {!!registryResult && (\n        <>\n          <div className={classes.item}>\n            <span className={classes.itemLabel}> Cross Ids: </span>\n            {registryResult.cross_ids.map((el, ind, arr) => (\n              <span className={classes.itemEntry} key={ind}>\n                {el}\n                {ind === arr.length - 1 ? '. ' : ', '}\n              </span>\n            ))}\n          </div>\n          <div className={classes.item}>\n            <span className={classes.itemLabel}>Alternate Types: </span>\n            {registryResult.alternate_types.map((el, ind, arr) => (\n              <span key={ind} className={classes.itemEntry}>\n                {el}\n                {ind === arr.length - 1 ? '. ' : ', '}\n              </span>\n            ))}\n          </div>\n          <div className={classes.item}>\n            <div>\n              <span className={classes.itemLabel}>\n                Mission Datasets ({registryResult.mission_datasets.length}){' '}\n              </span>\n            </div>\n            <div>\n              <span className={classes.itemEntry} style={{ fontSize: 14 }}>\n                <a href=\"\"> Download All</a>\n              </span>\n            </div>\n          </div>\n\n          <div className={classes.item}>\n            {missions.map((mission, ind) => (\n              <div key={ind}>\n                <ExpansionPanel\n                  color={theme.palette.primary.main}\n                  style={{ marginBottom: 2 }}\n                  elevation={2}\n                >\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography\n                      className={classes.expanderHeading}\n                    >{`${mission} (${missionCounts[mission]})`}</Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div style={{ width: '100%' }}>\n                      {registryResult.mission_datasets\n                        .filter((el) => el.mission === mission)\n                        .map((el, ind2) => (\n                          <div key={ind2} style={{ width: '100%' }}>\n                            <hr />\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Link to server:</span>\n                              <span className={classes.itemEntry}>\n                                <a href={el.link_to_file_server}> {el.link_to_file_server}</a>\n                              </span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>LID:</span>\n                              <span className={classes.itemEntry}>{el.lid}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Date:</span>\n                              <span className={classes.itemEntry}>{el.date}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Data Type:</span>\n                              <span className={classes.itemEntry}>{el.data_type}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Thumbnails:</span>\n                              <span className={classes.itemEntry}>\n                                {el.thumbnail_collections.map((coll, ind3) => (\n                                  <span key={ind3}>{coll.name}</span>\n                                ))}\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </div>\n            ))}\n          </div>\n\n          <div className={classes.item} style={{ marginTop: 20 }}>\n            <div>\n              <span className={classes.itemLabel}>\n                ROSES Proposal Datasets ({registryResult.roses_proposal_datasets.length}){' '}\n              </span>\n            </div>\n            <div>\n              <span className={classes.itemEntry} style={{ fontSize: 14 }}>\n                <a href=\"\"> Download All</a>\n              </span>\n            </div>\n          </div>\n\n          <div className={classes.item}>\n            {rosesProposals.map((proposal, ind) => (\n              <div key={ind}>\n                <ExpansionPanel\n                  color={theme.palette.primary.main}\n                  style={{ marginBottom: 2 }}\n                  elevation={2}\n                >\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography\n                      className={classes.expanderHeading}\n                    >{`${proposal} (${rosesProposalCounts[proposal]})`}</Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div style={{ width: '100%' }}>\n                      {registryResult.roses_proposal_datasets\n                        .filter((el) => el.proposal === proposal)\n                        .map((el, ind2) => (\n                          <div key={ind2} style={{ width: '100%' }}>\n                            <hr />\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Link to server:</span>\n                              <span className={classes.itemEntry}>\n                                <a href={el.link_to_file_server}> {el.link_to_file_server}</a>\n                              </span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>LID:</span>\n                              <span className={classes.itemEntry}>{el.lid}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Date:</span>\n                              <span className={classes.itemEntry}>{el.date}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Data Type:</span>\n                              <span className={classes.itemEntry}>{el.data_type}</span>\n                            </div>\n                            <div className={classes.item}>\n                              <span className={classes.itemLabel}>Thumbnails:</span>\n                              <span className={classes.itemEntry}>\n                                {el.thumbnail_collections.map((coll, ind3) => (\n                                  <span key={ind3}>{coll.name}</span>\n                                ))}\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useStyles } from './styles';\nimport {\n  selectSearchResultsSelectedObject,\n  selectSearchResultsRegistryResults\n} from '../../Redux/Selectors/search-results-selectors';\nimport { fetchRegistryResults } from '../../Redux/Thunks/fetchRegistryResults';\nimport { RegistryComet } from './RegistryComet';\n\nexport const ResultsForRegistry = () => {\n  const dispatch = useDispatch();\n  const selectedObject = useSelector(selectSearchResultsSelectedObject);\n\n  const selectedObjectName = selectedObject && selectedObject.name;\n  const registryResult = useSelector(selectSearchResultsRegistryResults(selectedObjectName));\n\n  useEffect(() => {\n    if (!!selectedObject) dispatch(fetchRegistryResults(selectedObject));\n  }, [selectedObject, dispatch]);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      {selectedObject && (\n        <>\n          <h4 className={classes.title}>Registry Results</h4>\n          {registryResult?.type === 'comet' && <RegistryComet registryResult={registryResult} />}\n          {registryResult?.type === 'asteroid' && <span>Asteroid Results</span>}\n          {registryResult?.type === 'dust' && <span>Dust Results</span>}\n          {registryResult?.type === 'meteor' && <span>Meteor Results</span>}\n        </>\n      )}\n    </div>\n  );\n};\n","import { SearchResultsSetRegistryResults, INameMatch } from '../Actions/search-results-actions';\n\nconst superSimpleJsonApiUrl =\n  'https://raw.githubusercontent.com/Small-Bodies-Node/sbn-portal-site/simple-headless-cms/headless-cms/demo-results-elst-pizzaro-comet.json';\n\nexport function fetchRegistryResults(selectedObject: INameMatch) {\n  // Mock fetch results\n  return function (dispatch: any) {\n    return fetch(superSimpleJsonApiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log('data', data);\n        dispatch(new SearchResultsSetRegistryResults(data));\n      })\n      .catch((err) => {\n        // Handle errors\n      });\n  };\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    },\n    title: {\n      // marginTop: 0\n    }\n  }),\n  { name: 'results-for-catch' }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useStyles } from './styles';\nimport { selectSearchResultsSelectedObject } from '../../Redux/Selectors/search-results-selectors';\n\nexport const ResultsForCatch = () => {\n  const selectedObject = useSelector(selectSearchResultsSelectedObject);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      {selectedObject && (\n        <>\n          <h4 className={classes.title}>CATCH Results</h4>\n          <div>Here are some awesome CATCH results...</div>\n        </>\n      )}\n    </div>\n  );\n};\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    },\n    title: {\n      // marginTop: 0\n    }\n  }),\n  { name: 'results-for-ferret' }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useStyles } from './styles';\nimport { selectSearchResultsSelectedObject } from '../../Redux/Selectors/search-results-selectors';\n\nexport const ResultsForFerret = () => {\n  const selectedObject = useSelector(selectSearchResultsSelectedObject);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      {selectedObject && (\n        <>\n          <h4 className={classes.title}>Ferret Results</h4>\n          <div>Here are some awesome Ferret results...</div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useStyles } from './styles';\nimport { Search } from '../Search';\nimport { Paper } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { selectSearchResultsSelectedObject } from '../../Redux/Selectors/search-results-selectors';\nimport { ResultsForRegistry } from '../ResultsForRegistry';\nimport { ResultsForCatch } from '../ResultsForCatch';\nimport { ResultsForFerret } from '../ResultsForFerret';\n\nexport const PageHome = () => {\n  const classes = useStyles();\n  const selectedObject = useSelector(selectSearchResultsSelectedObject);\n  return (\n    <div className={classes.container}>\n      <h1>SBN Home Page</h1>\n\n      <div className={classes.searchWrapper}>\n        <Search />\n      </div>\n\n      {selectedObject && (\n        <div className={classes.resultsWrapper}>\n          <Paper>\n            <ResultsForRegistry />\n          </Paper>\n          <Paper>\n            <ResultsForCatch />\n          </Paper>\n          <Paper>\n            <ResultsForFerret />\n          </Paper>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const PageAbout = () => {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageContact = () => {\n  return (\n    <>\n      <h1>Contact Page</h1>\n    </>\n  );\n};\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    data: {\n      '& > div > span': {\n        fontWeight: 'bold'\n      }\n    }\n  }),\n  { name: 'page-demo' }\n);\n","import { createSelector } from 'reselect';\n\nimport { TPermittedTheme } from '../../Models/themes';\nimport { IState } from '../';\n\n/**\n * Elemental Selectors\n */\n\nexport const selectSiteSettingsTheme = (state: IState): TPermittedTheme =>\n  state.siteSettingsSubstate.theme;\n\nexport const selectSiteSettingsIsHappyWithCookies = (state: IState): boolean =>\n  state.siteSettingsSubstate.isHappyWithCookies;\n\n/**\n * Compound Selectors\n */\n\nexport const selectAllContactItems = createSelector(\n  selectSiteSettingsTheme,\n  selectSiteSettingsIsHappyWithCookies,\n  (theme: TPermittedTheme, isHappyWithCookies: boolean): string => {\n    return isHappyWithCookies ? theme : 'hmmmm';\n  }\n);\n","import { IState } from '../';\n\n/**\n * Elemental Selectors\n */\n\nexport const selectDemoCounterCount = (state: IState): number => state.demoCounterSubstate.count;\nexport const selectDemoCounterQuote = (state: IState): { author: string; quote: string } => {\n  const { author, quote } = state.demoCounterSubstate;\n  return { author, quote };\n};\n\n/**\n * Compound Selectors\n */\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useStyles } from './styles';\nimport {\n  selectSiteSettingsTheme,\n  selectSiteSettingsIsHappyWithCookies\n} from '../../Redux/Selectors/site-settings-selectors';\nimport {\n  selectDemoCounterCount,\n  selectDemoCounterQuote\n} from '../../Redux/Selectors/demo-counter-selectors';\nimport {\n  SiteSettingsSetTheme,\n  SiteSettingsToggleIsHappyWithCookies\n} from '../../Redux/Actions/site-settings-actions';\nimport { DemoCounterIncrement, DemoCounterReset } from '../../Redux/Actions/demo-counter-actions';\n\nimport { fetchRandomTrumpQuote } from '../../Redux/Thunks/fetchRandomTrumpQuote';\n\nexport const PageReduxDemo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const theme = useSelector(selectSiteSettingsTheme);\n  const isHappyWithCookies = useSelector(selectSiteSettingsIsHappyWithCookies);\n  const demoCounterCount = useSelector(selectDemoCounterCount);\n  const { author, quote } = useSelector(selectDemoCounterQuote);\n\n  return (\n    <div className={classes.container}>\n      <h1>Redux Demo Page</h1>\n      <h4>Demo Site Settings</h4>\n      <p> The theme is: {theme}</p>\n      <p> Is the user happy with cookies: {isHappyWithCookies ? 'yes' : 'no'}</p>\n      <button\n        onClick={() => {\n          dispatch(new SiteSettingsSetTheme('light'));\n        }}\n      >\n        Make Theme Light\n      </button>\n      <button\n        onClick={() => {\n          dispatch(new SiteSettingsToggleIsHappyWithCookies());\n        }}\n      >\n        Toggle Is Happy With Cookies\n      </button>\n      <h4>Demo Counter</h4>\n      <div className={classes.data}>\n        <div>\n          <span>Author</span> : {author}\n        </div>\n        <div>\n          <span>Quote</span> : {quote}\n        </div>\n        <div>\n          <span>Count</span> : {demoCounterCount}\n        </div>\n      </div>\n      <div style={{ margin: 5 }}>\n        <button onClick={() => dispatch(new DemoCounterIncrement())}>Increase Count</button>\n        <button onClick={() => dispatch(new DemoCounterReset())}>Reset Count</button>\n        <button onClick={() => dispatch(fetchRandomTrumpQuote())}> Fetch Trump Quote</button>\n      </div>\n    </div>\n  );\n};\n","//\n\nimport { DemoCounterSetQuote, DemoCounterIncrement } from '../Actions/demo-counter-actions';\n\nexport function fetchRandomTrumpQuote() {\n  return function (dispatch: any) {\n    return fetch('https://api.whatdoestrumpthink.com/api/v1/quotes/random')\n      .then((res) => res.json())\n      .then((data) => {\n        const quote = data.message;\n        console.log('text', quote);\n        dispatch(new DemoCounterSetQuote({ quote, author: 'trump' }));\n        dispatch(new DemoCounterIncrement());\n      })\n      .catch((err) => {\n        // Handle errors\n      });\n  };\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: 64,\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText,\n      padding: `10px ${contentPadding}px`\n    }\n  }),\n  {\n    name: 'footer'\n  }\n);\n","// Px size defining mobile screen\nexport const mobileWidthPxl = 600;\n\n// This value chosen to align with items in AppBar\nexport const contentPadding = 12 + 24;\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n/**\n * Footer Component\n * We use React.memo() to export it as a component that basically never re-renders\n */\nexport const Footer = React.memo(() => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>This is a footer</div>\n    </>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { mobileWidthPxl } from '../../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      flexGrow: 1,\n      '& a': {\n        textDecoration: 'none',\n        color: theme.palette.primary.contrastText\n      }\n    },\n    menuButton: {\n      display: 'inline-block'\n    },\n    title: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingLeft: 0,\n      maxWidth: 99999\n    },\n    links: {\n      display: 'none',\n      '& > ul': {\n        marginLeft: 0,\n        paddingLeft: 0\n      }\n    },\n    listItem: {\n      display: 'inline-block',\n      marginLeft: 15\n    },\n\n    settingsButton: {\n      display: 'inline-block'\n    },\n\n    // These styles apply when screen is MORE than mobileWidthPxl\n    [`@media (min-width: ${mobileWidthPxl}px)`]: {\n      container: {},\n      title: {\n        justifyContent: 'left',\n        flexGrow: 0.1,\n        paddingLeft: 12,\n        maxWidth: 170\n      },\n      links: {\n        flexGrow: 1,\n        display: 'inline-block'\n      },\n      menuButton: {\n        display: 'none'\n      }\n    }\n  }),\n  { name: 'menubar' }\n);\n","import React from 'react';\n\n// Icons\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Info from '@material-ui/icons/Info';\nimport Mail from '@material-ui/icons/Mail';\nimport Home from '@material-ui/icons/Home';\n\ninterface IMenuItem {\n  label: string;\n  route: string;\n  icon: React.JSXElementConstructor<any>;\n}\n\nexport const menuItems: IMenuItem[] = [\n  {\n    label: 'Home',\n    route: '',\n    icon: Home\n  },\n  {\n    label: 'About',\n    route: 'about',\n    icon: Info\n  },\n  {\n    label: 'Contact',\n    route: 'contact',\n    icon: Mail\n  }\n];\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Settings from '@material-ui/icons/Settings';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menu-items';\n// import { Link } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n}\n\nexport const MenuBar = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={props.openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\">SBN Portal</Link>\n          </Typography>\n\n          <Typography variant=\"subtitle1\" className={classes.links}>\n            <ul>\n              {menuItems\n                .filter((el) => el.label !== 'Home')\n                .map((el, ind) => (\n                  <Link key={ind} to={el.route}>\n                    <li className={classes.listItem}>{el.label}</li>\n                  </Link>\n                ))}\n            </ul>\n          </Typography>\n\n          <IconButton\n            edge=\"start\"\n            className={classes.settingsButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              console.log('Sth happened!!!');\n            }}\n          >\n            <Settings />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return {\n      container: {\n        width: 200,\n        '& ul': {\n          margin: 0,\n          '& li': {\n            '& a': {\n              textDecoration: 'none'\n            }\n          }\n        }\n      }\n    };\n  },\n  { name: 'menucolumn' }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menu-items';\n\ninterface IProps {\n  onItemClick: () => void;\n}\n\nexport const MenuColumn = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes['container']}>\n      <List>\n        {menuItems.map((el, ind) => (\n          <ListItem button component={Link} to={el.route} key={ind} onClick={props.onItemClick}>\n            <ListItemIcon>{<el.icon />}</ListItemIcon>\n            <ListItemText primary={el.label} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: theme.palette.background.default,\n\n      '& > header': {\n        position: 'fixed',\n        top: 0,\n        height: 80,\n        left: 0,\n        right: 0,\n        backgroundColor: 'blue'\n      },\n      '& > main': {\n        marginTop: 80,\n        backgroundColor: 'pink'\n      },\n      '& > footer': {\n        backgroundColor: 'cyan'\n      }\n    }\n  }),\n  { name: 'navigation' }\n);\n","import React, { useState, useCallback } from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport { MenuBar } from './MenuBar';\nimport { MenuColumn } from './MenuColumn';\nimport { useStyles } from './styles';\n\nconst drawerDelay = 100;\n\n/**\n * Component that renders menu bars, swipeable drawer, etc.\n * We use React.memo() to export it as a component that basically\n * never re-renders\n */\nexport const Navigation = React.memo(() => {\n  const classes = useStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const closeDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(false), drawerDelay), []);\n  const openDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(true), drawerDelay), []);\n\n  return (\n    <div role=\"presentation\" className={classes.container}>\n      <MenuBar openDrawer={openDrawer} closeDrawer={closeDrawer} />\n      <SwipeableDrawer\n        anchor={'left'}\n        open={isDrawerOpen}\n        onClose={closeDrawer}\n        onOpen={() => console.log('opening')}\n      >\n        <MenuColumn onItemClick={closeDrawer} />\n      </SwipeableDrawer>\n    </div>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n      // backgroundColor: 'red'\n    },\n    navWrapper: {\n      height: 64\n    },\n    pageWrapper: {\n      padding: contentPadding,\n      paddingTop: 0,\n      boxSizing: 'border-box',\n      flex: 1\n    },\n    footerWrapper: {\n      height: 50,\n      backgroundColor: theme.palette.primary.dark\n    }\n  }),\n  { name: 'layout' }\n);\n","import React from 'react';\n\nimport { Footer } from '../Footer';\nimport { Navigation } from '../Navigation';\nimport { useStyles } from './styles';\n\nexport const Layout = (props: any) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.navWrapper}>\n        <Navigation />\n      </div>\n\n      <div className={classes.pageWrapper}>{props.children}</div>\n\n      <div className={classes.navWrapper}>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux';\n\n// Style setup\nimport './index.scss';\nimport 'typeface-roboto';\n\n// App Setup\nimport * as serviceWorker from './serviceWorker';\nimport { AppEntry } from './AppEntry';\nReactDOM.render(\n  <Provider store={store}>\n    <AppEntry />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport theme from '../MaterialUI';\nimport { useStyles } from './styles';\nimport { PageHome } from '../Components/PageHome';\nimport { PageAbout } from '../Components/PageAbout';\nimport { PageContact } from '../Components/PageContact';\nimport { PageReduxDemo } from '../Components/PageReduxDemo';\nimport { Layout } from '../Components/Layout';\n\nexport const AppEntry = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router basename={process.env.REACT_APP_BASE_HREF || '/'}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <PageHome />\n              </Route>\n              <Route path=\"/about\">\n                <PageAbout />\n              </Route>\n              <Route path=\"/contact\">\n                <PageContact />\n              </Route>\n              <Route path=\"/redux-demo\">\n                <PageReduxDemo />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n"],"sourceRoot":""}