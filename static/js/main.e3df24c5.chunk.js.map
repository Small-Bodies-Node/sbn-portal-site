{"version":3,"sources":["Redux/Actions/site-settings-actions.ts","Redux/Actions/demo-counter-actions.ts","Redux/Reducers/site-settings-reducer.ts","Redux/Reducers/demo-counter-reducer.ts","Redux/index.ts","serviceWorker.ts","MaterialUI/index.ts","AppEntry/styles.ts","Components/PageHome/styles.ts","Components/PageHome/index.tsx","Components/PageAbout/index.tsx","Components/PageContact/index.tsx","Components/PageReduxDemo/styles.ts","Redux/Selectors/site-settings-selectors.ts","Redux/Selectors/demo-counter-selectors.ts","Components/PageReduxDemo/index.tsx","Redux/Thunks/index.ts","Components/Footer/styles.ts","Utils/constants.ts","Components/Footer/index.tsx","Components/Navigation/MenuBar/styles.ts","Components/Navigation/menu-items.ts","Components/Navigation/MenuBar/index.tsx","Components/Navigation/MenuColumn/styles.ts","Components/Navigation/MenuColumn/index.tsx","Components/Navigation/styles.ts","Components/Navigation/index.tsx","Components/Layout/styles.ts","Components/Layout/index.tsx","index.tsx","AppEntry/index.tsx"],"names":["ESiteSettingsActionTypes","EDemoCounterActionTypes","SiteSettingsSetTheme","payload","type","SET_THEME","this","SiteSettingsToggleIsHappyWithCookies","TOGGLE_IS_HAPPY_WITH_COOKIES","initialState","theme","isHappyWithCookies","DemoCounterIncrement","INCREMENT","DemoCounterReset","RESET","DemoCounterSetQuote","SET_QUOTE","count","quote","author","rootReducer","combineReducers","siteSettingsSubstate","state","action","SET_IS_HAPPY_WITH_COOKIES","demoCounterSubstate","incValue","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","defaultLight","createMuiTheme","palette","background","default","primary","main","secondary","error","useStyles","makeStyles","container","height","width","name","PageHome","classes","className","PageAbout","PageContact","data","fontWeight","selectSiteSettingsTheme","selectSiteSettingsIsHappyWithCookies","selectDemoCounterCount","createSelector","selectDemoCounterQuote","PageReduxDemo","dispatch","useDispatch","useSelector","demoCounterCount","onClick","style","margin","fetch","then","res","json","message","console","log","catch","err","backgroundColor","dark","color","contrastText","padding","Footer","React","memo","flexGrow","textDecoration","menuButton","display","title","justifyContent","alignItems","paddingLeft","maxWidth","links","marginLeft","listItem","settingsButton","menuItems","label","route","icon","Home","Info","Mail","MenuBar","props","AppBar","position","Toolbar","IconButton","edge","aria-label","openDrawer","Typography","variant","to","filter","el","map","ind","key","MenuColumn","List","ListItem","button","component","Link","onItemClick","ListItemIcon","ListItemText","Divider","top","left","right","marginTop","Navigation","useState","isDrawerOpen","setIsDrawerOpen","closeDrawer","useCallback","setTimeout","role","SwipeableDrawer","anchor","open","onClose","onOpen","flexDirection","minHeight","navWrapper","pageWrapper","paddingTop","boxSizing","flex","footerWrapper","Layout","children","ReactDOM","render","ThemeProvider","CssBaseline","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3df24c5.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport { TPermittedTheme } from '../../Models/themes';\n\n/**\n * Define all possible 'types' of redux action associated with site settings\n */\nexport enum ESiteSettingsActionTypes {\n  SET_THEME = '[SiteSettings] Set Theme',\n  SET_IS_HAPPY_WITH_COOKIES = '[SiteSettings] Set IsHappyWithCookies',\n  TOGGLE_IS_HAPPY_WITH_COOKIES = '[SiteSettings] Toggle IsHappyWithCookies'\n}\n\n/**\n * Define an 'action creator' for each type of action\n * Here we take the class-based approach to action creators\n */\nexport class SiteSettingsSetTheme implements Action {\n  readonly type = ESiteSettingsActionTypes.SET_THEME;\n  constructor(public payload: TPermittedTheme) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SiteSettingsSetIsHappyWithCookies implements Action {\n  readonly type = ESiteSettingsActionTypes.SET_IS_HAPPY_WITH_COOKIES;\n  constructor(public payload: boolean) {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\nexport class SiteSettingsToggleIsHappyWithCookies implements Action {\n  readonly type = ESiteSettingsActionTypes.TOGGLE_IS_HAPPY_WITH_COOKIES;\n  constructor() {\n    return { ...this }; // return js object instead of class instance\n  }\n}\n\n/**\n * Combine and export all action-creator class names into a single type\n */\nexport type SiteSettingsActions =\n  | SiteSettingsSetTheme\n  | SiteSettingsSetIsHappyWithCookies\n  | SiteSettingsToggleIsHappyWithCookies;\n","import { Action } from 'redux';\n\n/**\n * Define all possible 'type' properties of redux actions associated with site settings\n */\nexport enum EDemoCounterActionTypes {\n  SET_QUOTE = '[DemoCounter] Set Quote',\n  INCREMENT = '[DemoCounter] Increment',\n  RESET = '[DemoCounter] Reset'\n}\n\n/**\n * Define an 'action creator' for each type of action\n * Here we take the class-based approach to action creators\n */\nexport class DemoCounterIncrement implements Action {\n  readonly type = EDemoCounterActionTypes.INCREMENT;\n  constructor(public payload?: number) {\n    return { ...this };\n  }\n}\n\nexport class DemoCounterReset implements Action {\n  readonly type = EDemoCounterActionTypes.RESET;\n  constructor() {\n    return { ...this };\n  }\n}\n\nexport class DemoCounterSetQuote implements Action {\n  readonly type = EDemoCounterActionTypes.SET_QUOTE;\n  constructor(public payload: { author: string; quote: string }) {\n    return { ...this };\n  }\n}\n\n/**\n * Combine and export all action-creator class names into a single type\n */\nexport type DemoCounterActions = DemoCounterIncrement | DemoCounterReset | DemoCounterSetQuote;\n","import { TPermittedTheme } from '../../Models/themes';\nimport { ESiteSettingsActionTypes, SiteSettingsActions } from '../Actions/site-settings-actions';\n\nexport interface ISiteSettings {\n  theme: TPermittedTheme;\n  isHappyWithCookies: boolean;\n}\n\nconst initialState: ISiteSettings = {\n  theme: 'dark',\n  isHappyWithCookies: false\n};\n\nexport function siteSettingsReducer(\n  state: Readonly<ISiteSettings> = initialState,\n  action: SiteSettingsActions\n): ISiteSettings {\n  switch (action.type) {\n    case ESiteSettingsActionTypes.SET_THEME: {\n      return {\n        ...state,\n        theme: action.payload\n      };\n    }\n    case ESiteSettingsActionTypes.SET_IS_HAPPY_WITH_COOKIES: {\n      return {\n        ...state,\n        isHappyWithCookies: action.payload\n      };\n    }\n    case ESiteSettingsActionTypes.TOGGLE_IS_HAPPY_WITH_COOKIES: {\n      return {\n        ...state,\n        isHappyWithCookies: !state.isHappyWithCookies\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { DemoCounterActions, EDemoCounterActionTypes } from '../Actions/demo-counter-actions';\n\nexport interface IDemoCounter {\n  count: number;\n  quote: string;\n  author: string;\n}\n\nconst initialState: IDemoCounter = {\n  count: 0,\n  quote: '',\n  author: ''\n};\n\nexport function demoCounterReducer(\n  state: Readonly<IDemoCounter> = initialState,\n  action: DemoCounterActions\n): IDemoCounter {\n  switch (action.type) {\n    case EDemoCounterActionTypes.INCREMENT: {\n      const incValue = action.payload || 1;\n      return {\n        ...state,\n        count: state.count + incValue\n      };\n    }\n    case EDemoCounterActionTypes.RESET: {\n      return {\n        ...state,\n        count: 0\n      };\n    }\n    case EDemoCounterActionTypes.SET_QUOTE: {\n      return {\n        ...state,\n        author: action.payload.author,\n        quote: action.payload.quote\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { siteSettingsReducer, ISiteSettings } from './Reducers/site-settings-reducer';\nimport { demoCounterReducer, IDemoCounter } from './Reducers/demo-counter-reducer';\n\nexport interface IState {\n  siteSettingsSubstate: ISiteSettings;\n  demoCounterSubstate: IDemoCounter;\n}\n\nexport const rootReducer = combineReducers<IState>({\n  siteSettingsSubstate: siteSettingsReducer,\n  demoCounterSubstate: demoCounterReducer\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const defaultDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: { default: 'black' }\n  }\n});\n\nexport const defaultLight = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n});\n\n// Themes derived from https://bootswatch.com/\nexport const darklyTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#375a7f' },\n    secondary: { main: '#444' },\n    error: { main: '#E74C3C' },\n    background: { default: 'black' }\n  }\n});\n\nexport const superheroTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#DF691A' },\n    secondary: { main: '#4E5D6C' },\n    error: { main: '#d9534f' },\n    background: { default: '#2B3E50' }\n  }\n});\n\n// export const theme = darklyTheme;\nexport const theme = defaultLight;\n\nexport default theme;\n\n//\n// Palette Type:\n//\n// primary?: PaletteColorOptions;\n// secondary?: PaletteColorOptions;\n// error?: PaletteColorOptions;\n// type?: PaletteType;\n// tonalOffset?: number;\n// contrastThreshold?: number;\n// common?: Partial<CommonColors>;\n// grey?: ColorPartial;\n// text?: Partial<TypeText>;\n// divider?: string;\n// action?: Partial<TypeAction>;\n// background?: Partial<TypeBackground>;\n// getContrastText?: (background: string) => string;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      height: '100%',\n      width: '100%'\n    }\n  }),\n  { name: 'app-entry' }\n);\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    }\n  }),\n  { name: 'page-home' }\n);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const PageHome = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>Home Page</h1>\n      <p>This is my home page!</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const PageAbout = () => {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageContact = () => {\n  return (\n    <>\n      <h1>Contact Page</h1>\n    </>\n  );\n};\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    data: {\n      '& > div > span': {\n        fontWeight: 'bold'\n      }\n    }\n  }),\n  { name: 'page-demo' }\n);\n","import { createSelector } from 'reselect';\n\nimport { TPermittedTheme } from '../../Models/themes';\nimport { IState } from '../';\n\n/**\n * Elemental Selectors\n */\n\nexport const selectSiteSettingsTheme = (state: IState): TPermittedTheme =>\n  state.siteSettingsSubstate.theme;\n\nexport const selectSiteSettingsIsHappyWithCookies = (state: IState): boolean =>\n  state.siteSettingsSubstate.isHappyWithCookies;\n\n/**\n * Compound Selectors\n */\n\nexport const selectAllContactItems = createSelector(\n  selectSiteSettingsTheme,\n  selectSiteSettingsIsHappyWithCookies,\n  (theme: TPermittedTheme, isHappyWithCookies: boolean): string => {\n    return isHappyWithCookies ? theme : 'hmmmm';\n  }\n);\n","import { IState } from '../';\n\n/**\n * Elemental Selectors\n */\n\nexport const selectDemoCounterCount = (state: IState): number => state.demoCounterSubstate.count;\nexport const selectDemoCounterQuote = (state: IState): { author: string; quote: string } => {\n  const { author, quote } = state.demoCounterSubstate;\n  return { author, quote };\n};\n\n/**\n * Compound Selectors\n */\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useStyles } from './styles';\nimport {\n  selectSiteSettingsTheme,\n  selectSiteSettingsIsHappyWithCookies\n} from '../../Redux/Selectors/site-settings-selectors';\nimport {\n  selectDemoCounterCount,\n  selectDemoCounterQuote\n} from '../../Redux/Selectors/demo-counter-selectors';\nimport {\n  SiteSettingsSetTheme,\n  SiteSettingsToggleIsHappyWithCookies\n} from '../../Redux/Actions/site-settings-actions';\nimport { DemoCounterIncrement, DemoCounterReset } from '../../Redux/Actions/demo-counter-actions';\n\nimport { fetchLutherInsult } from '../../Redux/Thunks';\n\nexport const PageReduxDemo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const theme = useSelector(selectSiteSettingsTheme);\n  const isHappyWithCookies = useSelector(selectSiteSettingsIsHappyWithCookies);\n  const demoCounterCount = useSelector(selectDemoCounterCount);\n  const { author, quote } = useSelector(selectDemoCounterQuote);\n\n  return (\n    <div className={classes.container}>\n      <h1>Redux Demo Page</h1>\n      <h4>Demo Site Settings</h4>\n      <p> The theme is: {theme}</p>\n      <p> Is the user happy with cookies: {isHappyWithCookies ? 'yes' : 'no'}</p>\n      <button\n        onClick={() => {\n          dispatch(new SiteSettingsSetTheme('light'));\n        }}\n      >\n        Make Theme Light\n      </button>\n      <button\n        onClick={() => {\n          dispatch(new SiteSettingsToggleIsHappyWithCookies());\n        }}\n      >\n        Toggle Is Happy With Cookies\n      </button>\n      <h4>Demo Counter</h4>\n      <div className={classes.data}>\n        <div>\n          <span>Author</span> : {author}\n        </div>\n        <div>\n          <span>Quote</span> : {quote}\n        </div>\n        <div>\n          <span>Count</span> : {demoCounterCount}\n        </div>\n      </div>\n      <div style={{ margin: 5 }}>\n        <button onClick={() => dispatch(new DemoCounterIncrement())}>Increase Count</button>\n        <button onClick={() => dispatch(new DemoCounterReset())}>Reset Count</button>\n        <button onClick={() => dispatch(fetchLutherInsult())}> Fetch Trump Quote</button>\n      </div>\n    </div>\n  );\n};\n","//\n\nimport { DemoCounterSetQuote, DemoCounterIncrement } from '../Actions/demo-counter-actions';\n\nexport function fetchLutherInsult() {\n  // Invert control!\n  // Return a function that accepts `dispatch` so we can dispatch later.\n  // Thunk middleware knows how to turn thunk async actions into actions.\n\n  return function (dispatch: any) {\n    return fetch('https://api.whatdoestrumpthink.com/api/v1/quotes/random')\n      .then((res) => res.json())\n      .then((data) => {\n        const quote = data.message;\n        console.log('text', quote);\n        dispatch(new DemoCounterSetQuote({ quote, author: 'trump' }));\n        dispatch(new DemoCounterIncrement());\n      })\n      .catch((err) => {\n        // Handle errors\n      });\n  };\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: 64,\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText,\n      padding: `10px ${contentPadding}px`\n    }\n  }),\n  {\n    name: 'footer'\n  }\n);\n","// Px size defining mobile screen\nexport const mobileWidthPxl = 600;\n\n// This value chosen to align with items in AppBar\nexport const contentPadding = 12 + 24;\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n/**\n * Footer Component\n * We use React.memo() to export it as a component that basically never re-renders\n */\nexport const Footer = React.memo(() => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>This is a footer</div>\n    </>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { mobileWidthPxl } from '../../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      flexGrow: 1,\n      '& a': {\n        textDecoration: 'none',\n        color: theme.palette.primary.contrastText\n      }\n    },\n    menuButton: {\n      display: 'inline-block'\n    },\n    title: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingLeft: 0,\n      maxWidth: 99999\n    },\n    links: {\n      display: 'none',\n      '& > ul': {\n        marginLeft: 0,\n        paddingLeft: 0\n      }\n    },\n    listItem: {\n      display: 'inline-block',\n      marginLeft: 15\n    },\n\n    settingsButton: {\n      display: 'inline-block'\n    },\n\n    // These styles apply when screen is MORE than mobileWidthPxl\n    [`@media (min-width: ${mobileWidthPxl}px)`]: {\n      container: {},\n      title: {\n        justifyContent: 'left',\n        flexGrow: 0.1,\n        paddingLeft: 12,\n        maxWidth: 170\n      },\n      links: {\n        flexGrow: 1,\n        display: 'inline-block'\n      },\n      menuButton: {\n        display: 'none'\n      }\n    }\n  }),\n  { name: 'menubar' }\n);\n","import React from 'react';\n\n// Icons\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Info from '@material-ui/icons/Info';\nimport Mail from '@material-ui/icons/Mail';\nimport Home from '@material-ui/icons/Home';\n\ninterface IMenuItem {\n  label: string;\n  route: string;\n  icon: React.JSXElementConstructor<any>;\n}\n\nexport const menuItems: IMenuItem[] = [\n  {\n    label: 'Home',\n    route: '',\n    icon: Home\n  },\n  {\n    label: 'About',\n    route: 'about',\n    icon: Info\n  },\n  {\n    label: 'Contact',\n    route: 'contact',\n    icon: Mail\n  }\n];\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Settings from '@material-ui/icons/Settings';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menu-items';\n// import { Link } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n}\n\nexport const MenuBar = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={props.openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\">SBN Portal</Link>\n          </Typography>\n\n          <Typography variant=\"subtitle1\" className={classes.links}>\n            <ul>\n              {menuItems\n                .filter((el) => el.label !== 'Home')\n                .map((el, ind) => (\n                  <Link key={ind} to={el.route}>\n                    <li className={classes.listItem}>{el.label}</li>\n                  </Link>\n                ))}\n            </ul>\n          </Typography>\n\n          <IconButton\n            edge=\"start\"\n            className={classes.settingsButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              console.log('Sth happened!!!');\n            }}\n          >\n            <Settings />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return {\n      container: {\n        width: 200,\n        '& ul': {\n          margin: 0,\n          '& li': {\n            '& a': {\n              textDecoration: 'none'\n            }\n          }\n        }\n      }\n    };\n  },\n  { name: 'menucolumn' }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menu-items';\n\ninterface IProps {\n  onItemClick: () => void;\n}\n\nexport const MenuColumn = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes['container']}>\n      <List>\n        {menuItems.map((el, ind) => (\n          <ListItem button component={Link} to={el.route} key={ind} onClick={props.onItemClick}>\n            <ListItemIcon>{<el.icon />}</ListItemIcon>\n            <ListItemText primary={el.label} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: theme.palette.background.default,\n\n      '& > header': {\n        position: 'fixed',\n        top: 0,\n        height: 80,\n        left: 0,\n        right: 0,\n        backgroundColor: 'blue'\n      },\n      '& > main': {\n        marginTop: 80,\n        backgroundColor: 'pink'\n      },\n      '& > footer': {\n        backgroundColor: 'cyan'\n      }\n    }\n  }),\n  { name: 'navigation' }\n);\n","import React, { useState, useCallback } from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport { MenuBar } from './MenuBar';\nimport { MenuColumn } from './MenuColumn';\nimport { useStyles } from './styles';\n\nconst drawerDelay = 100;\n\n/**\n * Component that renders menu bars, swipeable drawer, etc.\n * We use React.memo() to export it as a component that basically\n * never re-renders\n */\nexport const Navigation = React.memo(() => {\n  const classes = useStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const closeDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(false), drawerDelay), []);\n  const openDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(true), drawerDelay), []);\n\n  return (\n    <div role=\"presentation\" className={classes.container}>\n      <MenuBar openDrawer={openDrawer} closeDrawer={closeDrawer} />\n      <SwipeableDrawer\n        anchor={'left'}\n        open={isDrawerOpen}\n        onClose={closeDrawer}\n        onOpen={() => console.log('opening')}\n      >\n        <MenuColumn onItemClick={closeDrawer} />\n      </SwipeableDrawer>\n    </div>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n      // backgroundColor: 'red'\n    },\n    navWrapper: {\n      height: 64\n    },\n    pageWrapper: {\n      padding: contentPadding,\n      paddingTop: 0,\n      boxSizing: 'border-box',\n      flex: 1\n    },\n    footerWrapper: {\n      height: 50,\n      backgroundColor: theme.palette.primary.dark\n    }\n  }),\n  { name: 'layout' }\n);\n","import React from 'react';\n\nimport { Footer } from '../Footer';\nimport { Navigation } from '../Navigation';\nimport { useStyles } from './styles';\n\nexport const Layout = (props: any) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.navWrapper}>\n        <Navigation />\n      </div>\n\n      <div className={classes.pageWrapper}>{props.children}</div>\n\n      <div className={classes.navWrapper}>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux';\n\n// Style setup\nimport './index.scss';\nimport 'typeface-roboto';\n\n// App Setup\nimport * as serviceWorker from './serviceWorker';\nimport { AppEntry } from './AppEntry';\nReactDOM.render(\n  <Provider store={store}>\n    <AppEntry />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport theme from '../MaterialUI';\nimport { useStyles } from './styles';\nimport { PageHome } from '../Components/PageHome';\nimport { PageAbout } from '../Components/PageAbout';\nimport { PageContact } from '../Components/PageContact';\nimport { PageReduxDemo } from '../Components/PageReduxDemo';\nimport { Layout } from '../Components/Layout';\n\nexport const AppEntry = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router basename={process.env.REACT_APP_BASE_HREF || '/'}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <PageHome />\n              </Route>\n              <Route path=\"/about\">\n                <PageAbout />\n              </Route>\n              <Route path=\"/contact\">\n                <PageContact />\n              </Route>\n              <Route path=\"/redux-demo\">\n                <PageReduxDemo />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n"],"sourceRoot":""}