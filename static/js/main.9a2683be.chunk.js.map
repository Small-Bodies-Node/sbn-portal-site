{"version":3,"sources":["serviceWorker.ts","MaterialUI/index.ts","AppEntry/styles.ts","Components/PageHome/styles.ts","Components/PageHome/index.tsx","Components/PageAbout/index.tsx","Components/Footer/styles.ts","Utils/constants.ts","Components/Footer/index.tsx","Components/Navigation/MenuBar/styles.ts","Components/Navigation/menuItems.ts","Components/Navigation/MenuBar/index.tsx","Components/Navigation/MenuColumn/styles.ts","Components/Navigation/MenuColumn/index.tsx","Components/Navigation/styles.ts","Components/Navigation/index.tsx","Components/Layout/styles.ts","Components/Layout/index.tsx","AppEntry/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","defaultLight","createMuiTheme","palette","type","background","default","theme","primary","main","secondary","error","useStyles","makeStyles","container","height","width","name","PageHome","PageAbout","backgroundColor","dark","color","contrastText","padding","Footer","React","memo","classes","className","flexGrow","textDecoration","menuButton","display","title","justifyContent","alignItems","paddingLeft","maxWidth","links","marginLeft","listItem","settingsButton","menuItems","label","route","icon","Home","Info","Mail","MenuBar","props","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","openDrawer","Typography","variant","Link","href","filter","el","map","ind","key","console","log","margin","MenuColumn","List","ListItem","button","component","to","onItemClick","ListItemIcon","ListItemText","Divider","top","left","right","marginTop","Navigation","useState","isDrawerOpen","setIsDrawerOpen","closeDrawer","useCallback","setTimeout","role","SwipeableDrawer","anchor","open","onClose","onOpen","flexDirection","minHeight","navWrapper","pageWrapper","paddingTop","boxSizing","flex","footerWrapper","Layout","children","process","ReactDOM","render","ThemeProvider","CssBaseline","basename","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9a2683be.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const defaultDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: { default: 'black' }\n  }\n});\n\nexport const defaultLight = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n});\n\n// Themes derived from https://bootswatch.com/\nexport const darklyTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#375a7f' },\n    secondary: { main: '#444' },\n    error: { main: '#E74C3C' },\n    background: { default: 'black' }\n  }\n});\n\nexport const superheroTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#DF691A' },\n    secondary: { main: '#4E5D6C' },\n    error: { main: '#d9534f' },\n    background: { default: '#2B3E50' }\n  }\n});\n\n// export const theme = darklyTheme;\nexport const theme = defaultLight;\n\nexport default theme;\n\n//\n// Palette Type:\n//\n// primary?: PaletteColorOptions;\n// secondary?: PaletteColorOptions;\n// error?: PaletteColorOptions;\n// type?: PaletteType;\n// tonalOffset?: number;\n// contrastThreshold?: number;\n// common?: Partial<CommonColors>;\n// grey?: ColorPartial;\n// text?: Partial<TypeText>;\n// divider?: string;\n// action?: Partial<TypeAction>;\n// background?: Partial<TypeBackground>;\n// getContrastText?: (background: string) => string;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      height: '100%',\n      width: '100%'\n    }\n  }),\n  { name: 'app-entry' }\n);\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    }\n  }),\n  { name: 'page-home' }\n);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const PageHome = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <h1>Home Page</h1>\n      <p>This is my home page!</p>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageAbout = () => {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n      <p>This is my about page!</p>\n    </>\n  );\n};\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: 64,\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText,\n      padding: `10px ${contentPadding}px`\n    }\n  }),\n  {\n    name: 'footer'\n  }\n);\n","// Px size defining mobile screen\nexport const mobileWidthPxl = 600;\n\n// This value chosen to align with items in AppBar\nexport const contentPadding = 12 + 24;\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n/**\n * Footer Component\n * We use React.memo() to export it as a component that basically never re-renders\n */\nexport const Footer = React.memo(() => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>This is a footer</div>\n    </>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { mobileWidthPxl } from '../../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      flexGrow: 1,\n      '& a': {\n        textDecoration: 'none',\n        color: theme.palette.primary.contrastText\n      }\n    },\n    menuButton: {\n      display: 'inline-block'\n    },\n    title: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingLeft: 0,\n      maxWidth: 99999\n    },\n    links: {\n      display: 'none',\n      '& > ul': {\n        marginLeft: 0,\n        paddingLeft: 0\n      }\n    },\n    listItem: {\n      display: 'inline-block',\n      marginLeft: 15\n    },\n\n    settingsButton: {\n      display: 'inline-block'\n    },\n\n    // These styles apply when screen is MORE than mobileWidthPxl\n    [`@media (min-width: ${mobileWidthPxl}px)`]: {\n      container: {},\n      title: {\n        justifyContent: 'left',\n        flexGrow: 0.1,\n        paddingLeft: 12,\n        maxWidth: 170\n      },\n      links: {\n        flexGrow: 1,\n        display: 'inline-block'\n      },\n      menuButton: {\n        display: 'none'\n      }\n    }\n  }),\n  { name: 'menubar' }\n);\n","import React from 'react';\n\n// Icons\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Info from '@material-ui/icons/Info';\nimport Mail from '@material-ui/icons/Mail';\nimport Home from '@material-ui/icons/Home';\n\ninterface IMenuItem {\n  label: string;\n  route: string;\n  icon: React.JSXElementConstructor<any>;\n}\n\nexport const menuItems: IMenuItem[] = [\n  {\n    label: 'Home',\n    route: '/',\n    icon: Home\n  },\n  {\n    label: 'About',\n    route: '/about',\n    icon: Info\n  },\n  {\n    label: 'Contact',\n    route: '/contact',\n    icon: Mail\n  }\n];\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Settings from '@material-ui/icons/Settings';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menuItems';\nimport { Link } from '@material-ui/core';\n// import { Link } from 'react-router-dom';\n\ninterface IProps {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n}\n\nexport const MenuBar = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={props.openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link href=\"/\">\n              <li className={classes.listItem}>SBN Portal</li>\n            </Link>\n          </Typography>\n\n          <Typography variant=\"subtitle1\" className={classes.links}>\n            <ul>\n              {menuItems\n                .filter((el) => el.label !== 'Home')\n                .map((el, ind) => (\n                  <Link key={ind} href={el.route}>\n                    <li className={classes.listItem}>{el.label}</li>\n                  </Link>\n                ))}\n            </ul>\n          </Typography>\n\n          <IconButton\n            edge=\"start\"\n            className={classes.settingsButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              console.log('Sth happened!!!');\n            }}\n          >\n            <Settings />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return {\n      container: {\n        width: 200,\n        '& ul': {\n          margin: 0,\n          '& li': {\n            '& a': {\n              textDecoration: 'none'\n            }\n          }\n        }\n      }\n    };\n  },\n  { name: 'menucolumn' }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\n\nimport { useStyles } from './styles';\nimport { menuItems } from '../menuItems';\n\ninterface IProps {\n  onItemClick: () => void;\n}\n\nexport const MenuColumn = React.memo((props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes['container']}>\n      <List>\n        {menuItems.map((el, ind) => (\n          <ListItem button component={Link} to={el.route} key={ind} onClick={props.onItemClick}>\n            <ListItemIcon>{<el.icon />}</ListItemIcon>\n            <ListItemText primary={el.label} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: theme.palette.background.default,\n\n      '& > header': {\n        position: 'fixed',\n        top: 0,\n        height: 80,\n        left: 0,\n        right: 0,\n        backgroundColor: 'blue'\n      },\n      '& > main': {\n        marginTop: 80,\n        backgroundColor: 'pink'\n      },\n      '& > footer': {\n        backgroundColor: 'cyan'\n      }\n    }\n  }),\n  { name: 'navigation' }\n);\n","import React, { useState, useCallback } from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport { MenuBar } from './MenuBar';\nimport { MenuColumn } from './MenuColumn';\nimport { useStyles } from './styles';\n\nconst drawerDelay = 100;\n\n/**\n * Component that renders menu bars, swipeable drawer, etc.\n * We use React.memo() to export it as a component that basically\n * never re-renders\n */\nexport const Navigation = React.memo(() => {\n  const classes = useStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const closeDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(false), drawerDelay), []);\n  const openDrawer = useCallback(() => setTimeout(() => setIsDrawerOpen(true), drawerDelay), []);\n\n  return (\n    <div role=\"presentation\" className={classes.container}>\n      <MenuBar openDrawer={openDrawer} closeDrawer={closeDrawer} />\n      <SwipeableDrawer\n        anchor={'left'}\n        open={isDrawerOpen}\n        onClose={closeDrawer}\n        onOpen={() => console.log('opening')}\n      >\n        <MenuColumn onItemClick={closeDrawer} />\n      </SwipeableDrawer>\n    </div>\n  );\n});\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { contentPadding } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n      // backgroundColor: 'red'\n    },\n    navWrapper: {\n      height: 64\n    },\n    pageWrapper: {\n      padding: contentPadding,\n      paddingTop: 0,\n      boxSizing: 'border-box',\n      flex: 1\n    },\n    footerWrapper: {\n      height: 50,\n      backgroundColor: theme.palette.primary.dark\n    }\n  }),\n  { name: 'layout' }\n);\n","import React from 'react';\n\nimport { Footer } from '../Footer';\nimport { Navigation } from '../Navigation';\nimport { useStyles } from './styles';\n\nexport const Layout = (props: any) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.navWrapper}>\n        <Navigation />\n      </div>\n\n      <div className={classes.pageWrapper}>{props.children}</div>\n\n      <div className={classes.navWrapper}>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport theme from '../MaterialUI';\nimport { useStyles } from './styles';\nimport { PageHome } from '../Components/PageHome';\nimport { PageAbout } from '../Components/PageAbout';\nimport { Layout } from '../Components/Layout';\n\nconsole.log('process.env.REACT_APP_BASE_HREF:', process.env.REACT_APP_BASE_HREF);\n\nexport const AppEntry = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router basename={process.env.REACT_APP_BASE_HREF || '/'}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <PageHome />\n              </Route>\n              <Route path=\"/about\">\n                <PageAbout />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Style setup\nimport './index.scss';\nimport 'typeface-roboto';\n\n// App Setup\nimport * as serviceWorker from './serviceWorker';\nimport { AppEntry } from './AppEntry';\nReactDOM.render(<AppEntry />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}